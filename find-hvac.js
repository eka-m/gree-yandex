import Gree from 'gree-hvac-client'
import dgram from 'dgram'

console.log('üîç –ü–æ–∏—Å–∫ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤ Gree –≤ —Å–µ—Ç–∏...')
console.log('–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...\n')

const socket = dgram.createSocket('udp4')
const foundDevices = new Set()

socket.on('error', (err) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ UDP —Å–æ–∫–µ—Ç–∞:', err.message)
  socket.close()
})

socket.on('message', (msg, rinfo) => {
  try {
    // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ MAC –∞–¥—Ä–µ—Å –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    const message = msg.toString()
    if (message.includes('mac') || message.includes('device')) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä: ${rinfo.address}:${rinfo.port}`)
      foundDevices.add(rinfo.address)
    }
  } catch (error) {
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞
  }
})

// –°–∫–∞–Ω–∏—Ä—É–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω IP –∞–¥—Ä–µ—Å–æ–≤
function scanNetwork() {
  const baseIP = '192.168.31.'
  
  for (let i = 1; i <= 254; i++) {
    const ip = baseIP + i
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º broadcast —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = Buffer.from('{"t": "scan"}')
    socket.send(message, 7000, ip, (err) => {
      if (err) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ ${ip}:`, err.message)
      }
    })
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
socket.bind(() => {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏...')
  scanNetwork()
  
  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
  setTimeout(() => {
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:')
    if (foundDevices.size === 0) {
      console.log('‚ùå –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
      console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:')
      console.log('   - –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ WiFi')
      console.log('   - –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–π –ø–æ–¥—Å–µ—Ç–∏')
      console.log('   - –§–∞–π—Ä–≤–æ–ª –±–ª–æ–∫–∏—Ä—É–µ—Ç UDP —Ç—Ä–∞—Ñ–∏–∫')
      console.log('   - –ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª Gree')
    } else {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä—ã:')
      foundDevices.forEach(ip => {
        console.log(`   - ${ip}:7000`)
      })
      console.log('\nüí° –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–∏—Ç–µ IP –∞–¥—Ä–µ—Å –≤ server.js')
    }
    
    socket.close()
    process.exit(0)
  }, 30000)
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ Ctrl+C
process.on('SIGINT', () => {
  console.log('\nüõë –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º')
  socket.close()
  process.exit(0)
}) 