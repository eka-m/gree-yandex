import fetch from 'node-fetch'

const WEBHOOK_URL = 'http://localhost:3002/yandex-webhook'

// –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
const testCommands = [
  {
    name: '–í–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞',
    request: {
      request: {
        command: '–≤–∫–ª—é—á–∏ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä',
        type: 'SimpleUtterance'
      },
      session: {
        session_id: 'test-session-1'
      },
      version: '1.0'
    }
  },
  {
    name: '–í—ã–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞',
    request: {
      request: {
        command: '–≤—ã–∫–ª—é—á–∏ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä',
        type: 'SimpleUtterance'
      },
      session: {
        session_id: 'test-session-2'
      },
      version: '1.0'
    }
  },
  {
    name: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã',
    request: {
      request: {
        command: '—É—Å—Ç–∞–Ω–æ–≤–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É 24',
        type: 'SimpleUtterance'
      },
      session: {
        session_id: 'test-session-3'
      },
      version: '1.0'
    }
  },
  {
    name: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π',
    request: {
      request: {
        command: '–≤–∫–ª—é—á–∏ –ø–æ–¥—Å–≤–µ—Ç–∫—É',
        type: 'SimpleUtterance'
      },
      session: {
        session_id: 'test-session-4'
      },
      version: '1.0'
    }
  },
  {
    name: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞',
    request: {
      request: {
        command: '—Å—Ç–∞—Ç—É—Å –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞',
        type: 'SimpleUtterance'
      },
      session: {
        session_id: 'test-session-5'
      },
      version: '1.0'
    }
  }
]

async function testWebhook() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook...\n')
  
  for (const test of testCommands) {
    try {
      console.log(`üìù –¢–µ—Å—Ç: ${test.name}`)
      console.log(`üé§ –ö–æ–º–∞–Ω–¥–∞: "${test.request.request.command}"`)
      
      const response = await fetch(WEBHOOK_URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(test.request)
      })
      
      const data = await response.json()
      
      if (response.ok) {
        console.log(`‚úÖ –û—Ç–≤–µ—Ç: "${data.response.text}"`)
      } else {
        console.log(`‚ùå –û—à–∏–±–∫–∞: ${data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
      }
      
      console.log('---\n')
      
      // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
      await new Promise(resolve => setTimeout(resolve, 1000))
      
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: ${error.message}\n`)
    }
  }
  
  console.log('üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ')
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testWebhook().catch(console.error) 